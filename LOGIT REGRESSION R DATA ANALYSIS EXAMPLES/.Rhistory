# uncomment (remove ##) to run
install.packages("dplyr", dependencies=TRUE)
install.packages("ggplot2", dependencies=TRUE)
install.packages("rmarkdown", dependencies=TRUE)
install.packages("shiny", dependencies=TRUE)
#https://stats.idre.ucla.edu/stat/data/intro_r/intro_r_interactive.html#(15)
library(dplyr)
library(ggplot2)
library(shiny)
# list all available vignettes
vignette()
# intro to dplyr can be see by
vignette(dplyr)
# intro to dplyr can be see by
vignette("dplyr")
#open help of log() function
?log
# R programming 3: Function arguments
log(x=100, base=10)
log(8,2)
log(100,10)
# Creating vectors
# create a vector
first_vec <- c(1, 3, 5)
# Creating vectors
# create a vector
first_vec <- c(1, 3, 5)
# Creating vectors
# create a vector
first_vec <- c(1, 3, 5)
first_vec
# Creating vectors
# create a vector
first_vec <- c(1, 3, 5)
# uncomment (remove ##) to run
install.packages("dplyr", dependencies=TRUE)
install.packages("ggplot2", dependencies=TRUE)
install.packages("rmarkdown", dependencies=TRUE)
install.packages("shiny", dependencies=TRUE)
#https://stats.idre.ucla.edu/stat/data/intro_r/intro_r_interactive.html#(15)
library(dplyr)
library(ggplot2)
library(shiny)
# list all available vignettes
vignette()
# intro to dplyr can be see by
vignette("dplyr")
# R programming 1: Coding
# R is case sensitive
# R programming 2: Functions and help files
#open help of log() function
?log
# R programming 3: Function arguments
log(x=100, base=10)
# specifying arguments by position
log(100,10)
log(8,2)
# https://stats.idre.ucla.edu/stat/data/intro_r/intro_r_interactive.html
#Vectors
#     Vectors, the fundamental data structure in R, are one-dimensional and homogeneous.
# Creating vectors
# create a vector
first_vec <- c(1, 3, 5)
first_vec
## [1] 1 3 5
char_vec <- c("these", "are", "some", "words")
length(char_vec)
length(first_vec)
# the result of this comparison is a logical vector
first_vec > c(2, 2, 2)
setwd("E:\\Self_GitKraken\\Working_Repo_GitHub\\UCLA-learn\\LOGIT REGRESSION R DATA ANALYSIS EXAMPLES")
install.packages("aod", dependencies=TRUE)
getwd()
install.packages("ggplot2", dependencies = TRUE)
install.packages("ggplot2", dependencies = TRUE)
library(aod)
library(ggplot2)
uate Record Exam scores),
#     GPA (grade point average) and prestige of the undergraduate institution, effect admission into graduate school.
#     The response variable, admit/donâ€™t admit, is a binary variable.
mydata <- read.csv("https://stats.idre.ucla.edu/stat/data/binary.csv")
## view the first few rows of the data
head(mydata)
summary(mydata)
sapply(mydata, sd)
?sapply
summary(mydata, sd)
summary(mydata, sd)
## two-way contingency table of categorical outcome and predictors we want
## to make sure there are not 0 cells
xtabs(~admit + rank, data = mydata)
#     The code below estimates a logistic regression model using the glm (generalized linear model) function.
#     First, we convert rank to a factor to indicate that rank should be treated as a categorical variable.
mydata$rank <- factor(mydata$rank)
summary(mydata)
summary(mydata$rank)
#   logit test
mylogit <- glm(admit ~ gre + gpa + rank, data = mydata, family = "binomial")
summary(mylogit)
confint(mylogit)
confint.default(mylogit)
wald.test(b = coef(mylogit), Sigma = vcov(mylogit), L = l)
l <- cbind(0, 0, 0, 1, -1, 0)
wald.test(b = coef(mylogit), Sigma = vcov(mylogit), L = l)
